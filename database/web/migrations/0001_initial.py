# Generated by Django 4.2.11 on 2024-06-04 11:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
            ],
        ),
        migrations.CreateModel(
            name='Fiber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=255, verbose_name='Material')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Manufacturer')),
                ('distributor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Distributor')),
                ('grade', models.CharField(blank=True, max_length=255, null=True, verbose_name='Grade')),
                ('singleFilamentDiameter', models.CharField(blank=True, max_length=255, null=True, verbose_name='Single filament diameter (mm)')),
                ('tow', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tow')),
                ('towInThousands', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tow (in thousands)')),
                ('tex', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tex (g/km)')),
                ('density', models.CharField(blank=True, max_length=255, null=True, verbose_name='Density (g/cm3)')),
                ('theoreticalDrySection', models.CharField(blank=True, max_length=255, null=True, verbose_name='Theoretical dry section (mm2)')),
                ('tensileStrength', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tensile strength (MPa)')),
                ('tensileModulus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tensile modulus (GPa)')),
                ('price21', models.CharField(blank=True, max_length=255, null=True, verbose_name='Price euros/kg (2021 to febrary 2022)')),
                ('price22', models.CharField(blank=True, max_length=255, null=True, verbose_name='Price euros/kg (after 02/2022)')),
                ('price23', models.CharField(blank=True, max_length=255, null=True, verbose_name='Price euros/kg (after 02/2023)')),
                ('price24', models.CharField(blank=True, max_length=255, null=True, verbose_name='Price euros/kg (after 01/2024)')),
                ('valid', models.BooleanField(default=False, verbose_name='Validation')),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partName', models.CharField(max_length=255, verbose_name='Part Name')),
                ('defaultInterfaceHeight', models.IntegerField(blank=True, null=True, verbose_name='Default Interface Height[mm]')),
                ('defaultInterfaceIntDiam', models.IntegerField(blank=True, null=True, verbose_name='Default Interface Int. Diam.[mm]')),
                ('defaultLinkType', models.CharField(blank=True, max_length=255, null=True, verbose_name='Default Link(Element) Type')),
                ('defaultLinkDefined', models.CharField(blank=True, max_length=255, null=True, verbose_name='Default Link defined by')),
                ('numberLink', models.IntegerField(blank=True, null=True, verbose_name='Number of Links')),
                ('numberBushing', models.IntegerField(blank=True, null=True, verbose_name='Number of Bushings')),
                ('totalMassLink', models.FloatField(blank=True, null=True, verbose_name='Total Mass of Links[g]')),
                ('totalMassAccumulation', models.FloatField(blank=True, null=True, verbose_name='Total Mass of Accumulation[g]')),
                ('totalMassWinding', models.FloatField(blank=True, null=True, verbose_name='Total Mass of Winding[g]')),
                ('totalMassBushing', models.FloatField(blank=True, null=True, verbose_name='Total Mass of Bushings[g]')),
                ('additionalMass', models.FloatField(blank=True, null=True, verbose_name='Additional Masses[g]')),
                ('totalMassStructure', models.FloatField(blank=True, null=True, verbose_name='Total Mass of Structure[g]')),
                ('totalFiberLength', models.FloatField(blank=True, null=True, verbose_name='Total Fiber Length[m]')),
                ('totalFiberMass', models.FloatField(blank=True, null=True, verbose_name='Total Fiber Mass[kg]')),
                ('totalResinMass', models.FloatField(blank=True, null=True, verbose_name='Total Resin Mass[g]')),
                ('projectImage', models.FileField(blank=True, null=True, upload_to='uploads/', verbose_name='Project Image')),
                ('part_gh', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document.gh')),
                ('part_mod', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document.mod')),
                ('part_csv', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document.csv')),
                ('part_rs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document.rs')),
                ('part_log', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document.log')),
                ('part_mp4', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document.mp4')),
                ('part_jpg', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document.jpg')),
                ('valid', models.BooleanField(default=False, verbose_name='Validation')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectName', models.CharField(max_length=255, unique=True, verbose_name='Project Name')),
                ('equipment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Equipment')),
                ('customer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer')),
                ('projectNo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project No')),
                ('partsNumber', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Number of Parts')),
                ('relativeDesign', models.CharField(blank=True, max_length=255, null=True, verbose_name='Relative Design')),
                ('structureDrawingNb', models.CharField(blank=True, max_length=255, null=True, verbose_name='Structure Drawing Nb')),
                ('documentNb', models.CharField(blank=True, max_length=255, null=True, verbose_name='Document Nr')),
                ('revision', models.CharField(blank=True, max_length=255, null=True, verbose_name='Revision')),
                ('lastUpdate', models.DateField(blank=True, null=True, verbose_name='Last Update M/D/Y')),
                ('valid', models.BooleanField(default=False, verbose_name='Validation')),
            ],
        ),
        migrations.CreateModel(
            name='Resin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Manufacturer')),
                ('resin', models.CharField(blank=True, max_length=255, null=True, verbose_name='Resin system - Resin')),
                ('hardener', models.CharField(blank=True, max_length=255, null=True, verbose_name='Resin system - Hardener')),
                ('accelerator', models.CharField(blank=True, max_length=255, null=True, verbose_name='Resin system - Accelerator')),
                ('ratioWR', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ratio(weight) R')),
                ('ratioWH', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ratio(weight) H')),
                ('ratioWA', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ratio(weight) A')),
                ('ratioVR', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ratio(volume) R')),
                ('ratioVH', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ratio(volume) H')),
                ('ratioVA', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ratio(volume) A')),
                ('potLife', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pot life (Process T°;h)')),
                ('processT', models.CharField(blank=True, max_length=255, null=True, verbose_name='Process T (°C)')),
                ('curingCycle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Curing cycle')),
                ('tg', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tg (°C)')),
                ('priceResin', models.CharField(blank=True, max_length=255, null=True, verbose_name='Price resin')),
                ('priceHardener', models.CharField(blank=True, max_length=255, null=True, verbose_name='Price hardener')),
                ('densityR', models.CharField(blank=True, max_length=255, null=True, verbose_name='Density (g/cm³)')),
                ('flexuralStrength', models.CharField(blank=True, max_length=255, null=True, verbose_name='Flexural strength (MPa)')),
                ('flexuralmodulus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Flexural modulus (GPa)')),
                ('modulusElasticity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Modulus of elasticity (GPa) (tensile)')),
                ('tensileStrength', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tensile strength (MPa)')),
                ('elongationBreak', models.CharField(blank=True, max_length=255, null=True, verbose_name='Elongation at break (%)')),
                ('compressionUltStrength', models.CharField(blank=True, max_length=255, null=True, verbose_name='Compression ult. strength (MPa)')),
                ('compressionModulus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Compression modulus (GPa)')),
                ('thermalExpansionCoefficient', models.CharField(blank=True, max_length=255, null=True, verbose_name='Thermal expansion coefficient (ppm/K)')),
                ('charpyimpact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Charpy impact at RT (mJ/mm²)')),
                ('fractureToughness', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fracture toughness K1C (Mpa.m1/2)')),
                ('fractureEnergy', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fracture energy G1C (J/m²)')),
                ('totalShrinkage', models.CharField(blank=True, max_length=255, null=True, verbose_name='Total shrinkage at RT (Vol%)')),
                ('hardness', models.CharField(blank=True, max_length=255, null=True, verbose_name='Hardness at RT')),
                ('waterAbsorption', models.CharField(blank=True, max_length=255, null=True, verbose_name='Water absorption (7d at 23°C)')),
                ('valid', models.BooleanField(default=False, verbose_name='Validation')),
            ],
        ),
        migrations.CreateModel(
            name='SequenceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequenceType', models.CharField(max_length=255, unique=True, verbose_name='Sequence Type')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Description')),
                ('valid', models.BooleanField(default=False, verbose_name='Validation')),
            ],
        ),
        migrations.CreateModel(
            name='Winding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=255, verbose_name='Link Name')),
                ('interface1', models.CharField(max_length=255, verbose_name='Interface Start')),
                ('interface2', models.CharField(max_length=255, verbose_name='Interface Transition')),
                ('interface3', models.CharField(max_length=255, verbose_name='Interface End')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.part', verbose_name='Part Name')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.project', verbose_name='Project Name')),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.sequencetype', verbose_name='WindingType Description')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, verbose_name='Username')),
                ('password', models.CharField(default='1a7928232fd865f75808759d0ab8d24f', max_length=255, verbose_name='Password')),
                ('depart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.department', verbose_name='Department')),
            ],
        ),
        migrations.CreateModel(
            name='R_and_D',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.CharField(max_length=255, verbose_name='Program ')),
                ('projectNr', models.CharField(max_length=255, verbose_name='Project Nr. ')),
                ('ERMDS', models.CharField(max_length=255, verbose_name='ERMDS Nr. ')),
                ('lastUpdate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last update ')),
                ('verifiedBy', models.CharField(blank=True, max_length=255, null=True, verbose_name='Verified by')),
                ('approvedBy', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approved by ')),
                ('numberOfBobbins', models.IntegerField(blank=True, null=True, verbose_name='Number of bobbins')),
                ('endEffector', models.CharField(blank=True, max_length=255, null=True, verbose_name='End-effector N°')),
                ('impregnationBath', models.CharField(blank=True, max_length=255, null=True, verbose_name='Impregnation bath')),
                ('entryNozzleDiam', models.CharField(blank=True, max_length=255, null=True, verbose_name='Entry nozzle diameter (mm)')),
                ('exitNozzleDiam', models.CharField(blank=True, max_length=255, null=True, verbose_name='Exit nozzle diameter (mm)')),
                ('roomTemperature', models.CharField(blank=True, max_length=255, null=True, verbose_name='Room temperature (°C)')),
                ('roomhumidity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Room humidity (%)')),
                ('brakeForcebobin', models.CharField(blank=True, max_length=255, null=True, verbose_name='Brake force/bobbin (N) (kg) (bar)')),
                ('windingSpeedRange', models.CharField(blank=True, max_length=255, null=True, verbose_name='Windng speed range (mm/s)')),
                ('FVR', models.CharField(blank=True, max_length=255, null=True, verbose_name='FVR (%)')),
                ('compositeDensity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Composite density ρ (g/cm3)')),
                ('porosity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Porosity (%)')),
                ('theoreticalSampleSection', models.CharField(blank=True, max_length=255, null=True, verbose_name='Theoretical sample section (mm²)')),
                ('experimentalSampleSection', models.CharField(blank=True, max_length=255, null=True, verbose_name='Experimental sample section (mm²)')),
                ('aged', models.CharField(blank=True, max_length=255, null=True, verbose_name='Aged / Non-aged')),
                ('temperatureOfTests', models.CharField(blank=True, max_length=255, null=True, verbose_name='Temperature of the tests')),
                ('numberOfSamples', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of samples')),
                ('configurarion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Configuration')),
                ('sampleLength', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sample length')),
                ('numberOfCycles', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number of cycles')),
                ('sleeve', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sleeve diameter / height (mm)')),
                ('thermalExpansionCoefficient', models.CharField(blank=True, max_length=255, null=True, verbose_name='Thermal expansion coefficient A (/K)')),
                ('thermalConductivity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Thermal conductivity K (W/(m.K))')),
                ('tensileYoungModulus', models.FloatField(blank=True, null=True, verbose_name="Tensile Young's modulus - Average (MPa)")),
                ('tensileUltimateStress', models.FloatField(blank=True, null=True, verbose_name='Tensile Ultimate Stress - Average (MPa)')),
                ('tensileUltimateStressMA', models.FloatField(blank=True, null=True, verbose_name='Tensile Ultimate Stress - Min A (MPa)')),
                ('tensileUltimateStressMB', models.FloatField(blank=True, null=True, verbose_name='Tensile Ultimate Stress - Min B (MPa)')),
                ('tensileUltimateLoad', models.FloatField(blank=True, null=True, verbose_name='Tensile Ultimate Load - Average (kN)')),
                ('tensileYieldStress', models.FloatField(blank=True, null=True, verbose_name='Tensile Yield Stress - Average (MPa)')),
                ('tensileYieldStressMA', models.FloatField(blank=True, null=True, verbose_name='Tensile Yield Stress - Min A (MPa)')),
                ('tensileYieldStressMB', models.FloatField(blank=True, null=True, verbose_name='Tensile Yield Stress - Min B (MPa)')),
                ('tensileYieldLoad', models.FloatField(blank=True, null=True, verbose_name='Tensile Yield Load - Average (kN)')),
                ('compressionYoungModulus', models.FloatField(blank=True, null=True, verbose_name="Compression Young's modulus - Average (MPa)")),
                ('compressionUltimateStress', models.FloatField(blank=True, null=True, verbose_name='Compression Ultimate Stress - Average (MPa)')),
                ('compressionUltimateStressMA', models.FloatField(blank=True, null=True, verbose_name='Compression Ultimate Stress - Min A (MPa)')),
                ('compressionUltimateStressMB', models.FloatField(blank=True, null=True, verbose_name='Compression Ultimate Stress - Min B (MPa)')),
                ('compressionUltimateLoad', models.FloatField(blank=True, null=True, verbose_name='Compression Ultimate Load - Average (kN)')),
                ('compressionYieldStress', models.FloatField(blank=True, null=True, verbose_name='Compression Yield Stress- Average (MPa)')),
                ('compressionYieldStressMA', models.FloatField(blank=True, null=True, verbose_name='Compression Yield Stress - Min A (MPa)')),
                ('compressionYieldStressMB', models.FloatField(blank=True, null=True, verbose_name='Compression Yield Stress - Min B (MPa)')),
                ('compressionYieldLoad', models.FloatField(blank=True, null=True, verbose_name='Compression Yield Load - Average (kN)')),
                ('poissonRatio', models.FloatField(blank=True, null=True, verbose_name="Poisson's ratio ν (-)")),
                ('flexuralModulusILSS', models.FloatField(blank=True, null=True, verbose_name='Flexural modulus - Average (MPa)')),
                ('ultimateShearForce', models.FloatField(blank=True, null=True, verbose_name='Ultimate Shear Force - Average (kN)')),
                ('ultimateShearStress', models.FloatField(blank=True, null=True, verbose_name='Ultimate Shear Stress - Average (MPa)')),
                ('ultimateShearStressMA', models.FloatField(blank=True, null=True, verbose_name='Ultimate Shear Stress - Min A (MPa)')),
                ('ultimateShearStressMB', models.FloatField(blank=True, null=True, verbose_name='Ultimate Shear Stress - Min B (MPa)')),
                ('flexuralModulusF', models.FloatField(blank=True, null=True, verbose_name='Flexural modulus - Average (MPa)')),
                ('flexuralUltimateStrength', models.FloatField(blank=True, null=True, verbose_name='Flexural Ultimate strength - Average (MPa)')),
                ('flexuralUltimateStrengthMA', models.FloatField(blank=True, null=True, verbose_name='Flexural Ultimate strength - Min A (MPa)')),
                ('flexuralUltimateStrengthMB', models.FloatField(blank=True, null=True, verbose_name='Flexural Ultimate strength - Min B (MPa)')),
                ('strainUltimateStrength', models.FloatField(blank=True, null=True, verbose_name='Strain at ultimate strength (%)')),
                ('flexuralUltimateForce', models.FloatField(blank=True, null=True, verbose_name=' Flexural Ultimate Force (N)')),
                ('yieldTorque', models.FloatField(blank=True, null=True, verbose_name='Yield Torque (Nm)')),
                ('maxiTorque', models.FloatField(blank=True, null=True, verbose_name='Maxi Torque (Nm)')),
                ('yieldAngle', models.FloatField(blank=True, null=True, verbose_name='Yield angle (°)')),
                ('maxiTwistedAngle', models.FloatField(blank=True, null=True, verbose_name='Maxi Twisted Angle (°)')),
                ('fiberC', models.CharField(blank=True, max_length=255, null=True)),
                ('numberOfBobbinsC', models.CharField(blank=True, max_length=255, null=True)),
                ('resinC', models.CharField(blank=True, max_length=255, null=True)),
                ('hardenerC', models.CharField(blank=True, max_length=255, null=True)),
                ('curingCycleC', models.CharField(blank=True, max_length=255, null=True)),
                ('towC', models.CharField(blank=True, max_length=255, null=True)),
                ('texC', models.CharField(blank=True, max_length=255, null=True)),
                ('fiberDensityC', models.CharField(blank=True, max_length=255, null=True)),
                ('resinDensityC', models.CharField(blank=True, max_length=255, null=True)),
                ('endEffectorC', models.CharField(blank=True, max_length=255, null=True)),
                ('impregnationBathC', models.CharField(blank=True, max_length=255, null=True)),
                ('entryNozzleDiamC', models.CharField(blank=True, max_length=255, null=True)),
                ('exitNozzleDiamC', models.CharField(blank=True, max_length=255, null=True)),
                ('roomTemperatureC', models.CharField(blank=True, max_length=255, null=True)),
                ('roomhumidityC', models.CharField(blank=True, max_length=255, null=True)),
                ('brakeForcebobinC', models.CharField(blank=True, max_length=255, null=True)),
                ('windingSpeedRangeC', models.CharField(blank=True, max_length=255, null=True)),
                ('FVRC', models.CharField(blank=True, max_length=255, null=True)),
                ('compositeDensityC', models.CharField(blank=True, max_length=255, null=True)),
                ('porosityC', models.CharField(blank=True, max_length=255, null=True)),
                ('theoreticalSampleSectionC', models.CharField(blank=True, max_length=255, null=True)),
                ('experimentalSampleSectionC', models.CharField(blank=True, max_length=255, null=True)),
                ('agedC', models.CharField(blank=True, max_length=255, null=True)),
                ('temperatureOfTestsC', models.CharField(blank=True, max_length=255, null=True)),
                ('numberOfSamplesC', models.CharField(blank=True, max_length=255, null=True)),
                ('configurarionC', models.CharField(blank=True, max_length=255, null=True)),
                ('sampleLengthC', models.CharField(blank=True, max_length=255, null=True)),
                ('numberOfCyclesC', models.CharField(blank=True, max_length=255, null=True)),
                ('sleeveC', models.CharField(blank=True, max_length=255, null=True)),
                ('thermalExpansionCoefficientC', models.CharField(blank=True, max_length=255, null=True)),
                ('thermalConductivityC', models.CharField(blank=True, max_length=255, null=True)),
                ('tensileYoungModulusC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileUltimateStressC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileUltimateStressMAC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileUltimateStressMBC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileUltimateLoadC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileYieldStressC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileYieldStressMAC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileYieldStressMBC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('tensileYieldLoadC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionYoungModulusC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionUltimateStressC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionUltimateStressMAC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionUltimateStressMBC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionUltimateLoadC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionYieldStressC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionYieldStressMAC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionYieldStressMBC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('compressionYieldLoadC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('poissonRatioC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('flexuralModulusILSSC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('ultimateShearForceC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('ultimateShearStressC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('ultimateShearStressMAC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('ultimateShearStressMBC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('flexuralModulusFC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('flexuralUltimateStrengthC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('flexuralUltimateStrengthMAC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('flexuralUltimateStrengthMBC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('strainUltimateStrengthC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('flexuralUltimateForceC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('yieldTorqueC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('maxiTorqueC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('yieldAngleC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('maxiTwistedAngleC', models.CharField(blank=True, default='Samples number: ', max_length=255, null=True)),
                ('valid', models.BooleanField(default=False, verbose_name='Validation')),
                ('fiber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.fiber', verbose_name='Fiber')),
                ('resin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.resin', verbose_name='Resin')),
            ],
        ),
        migrations.AddField(
            model_name='part',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.project', verbose_name='Project Name'),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkName', models.CharField(max_length=255, verbose_name='Link Name')),
                ('interface1', models.CharField(max_length=255, verbose_name='Interface1 Name')),
                ('interface2', models.CharField(max_length=255, verbose_name='Interface2 Name')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='Length[mm]')),
                ('linkType', models.CharField(blank=True, max_length=255, null=True, verbose_name='Link Type')),
                ('armDiam', models.FloatField(blank=True, null=True, verbose_name='Arm Diam.[mm]')),
                ('armSection', models.FloatField(blank=True, max_length=255, null=True, verbose_name='Arm Section[mm²]')),
                ('cycle', models.IntegerField(blank=True, null=True, verbose_name='Cycle')),
                ('sequence', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sequence')),
                ('finArmSection', models.FloatField(blank=True, null=True, verbose_name='Fin. Arm Section[mm²]')),
                ('finArmDiam', models.FloatField(blank=True, null=True, verbose_name='Fin. Arm Diam.[mm]')),
                ('finArmRadius', models.FloatField(blank=True, null=True, verbose_name='Fin. Arm Radius[m]')),
                ('mass', models.FloatField(blank=True, null=True, verbose_name='Mass[g]')),
                ('angle', models.FloatField(blank=True, null=True, verbose_name='Angle')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.part', verbose_name='Part Name')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.project', verbose_name='Project Name')),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaceName', models.CharField(max_length=255, verbose_name='Interface Name')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='Height[mm]')),
                ('intDiameter', models.IntegerField(blank=True, null=True, verbose_name='Int. Diameter[mm]')),
                ('totalLink', models.IntegerField(blank=True, null=True, verbose_name='Total Link')),
                ('totalArm', models.IntegerField(blank=True, null=True, verbose_name='Total Arm')),
                ('totalSection', models.FloatField(blank=True, null=True, verbose_name='Total Section[mm²]')),
                ('extDiameter', models.FloatField(blank=True, null=True, verbose_name='Ext. Diameter[mm]')),
                ('theoHeight', models.FloatField(blank=True, null=True, verbose_name='Theo. Height[mm]')),
                ('accMass', models.FloatField(blank=True, null=True, verbose_name='Acc. Mass[g]')),
                ('finODiam', models.FloatField(blank=True, null=True, verbose_name='Fin. O. Diam.[mm]')),
                ('finAccSection', models.FloatField(blank=True, null=True, verbose_name='Fin. Acc. Section[mm²]')),
                ('safetyFactor', models.IntegerField(blank=True, null=True, verbose_name='Safety Factor[%]')),
                ('interfaceCenterX', models.FloatField(blank=True, null=True, verbose_name='Interface Center X')),
                ('interfaceCenterY', models.FloatField(blank=True, null=True, verbose_name='Interface Center Y')),
                ('interfaceCenterZ', models.FloatField(blank=True, null=True, verbose_name='Interface Center Z')),
                ('directionVectorX', models.FloatField(blank=True, null=True, verbose_name='Direction Vector X')),
                ('directionVectorY', models.FloatField(blank=True, null=True, verbose_name='Direction Vector Y')),
                ('directionVectorZ', models.FloatField(blank=True, null=True, verbose_name='Direction Vector Z')),
                ('divisionStep', models.IntegerField(blank=True, null=True, verbose_name='Division Step')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.part', verbose_name='Part Name')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.project', verbose_name='Project Name')),
            ],
        ),
        migrations.CreateModel(
            name='Bushing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bushingName', models.CharField(max_length=255, verbose_name='Bushing Name')),
                ('numberInterface', models.IntegerField(blank=True, null=True, verbose_name='Number of Interface')),
                ('bushingDrawNb', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bushing Draw. Nb')),
                ('AccOnBushing', models.FloatField(blank=True, null=True, verbose_name='Acc. On Bushing[g]')),
                ('bushingMass', models.FloatField(blank=True, null=True, verbose_name='Bushing Mass[g]')),
                ('totalBushingMass', models.FloatField(blank=True, null=True, verbose_name='Total Bushing Mass[g]')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.part', verbose_name='Part Name')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.project', verbose_name='Project Name')),
            ],
        ),
    ]
